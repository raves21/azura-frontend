/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AnimeRouteImport } from './routes/anime/route'
import { Route as IndexImport } from './routes/index'
import { Route as LoginIndexImport } from './routes/login/index'
import { Route as AnimeIndexImport } from './routes/anime/index'
import { Route as AnimeSplatImport } from './routes/anime/$'
import { Route as AnimeCatalogIndexImport } from './routes/anime/catalog/index'
import { Route as AnimeAnimeIdIndexImport } from './routes/anime/$animeId/index'
import { Route as AnimeAnimeIdWatchIndexImport } from './routes/anime/$animeId/watch/index'

// Create/Update Routes

const AnimeRouteRoute = AnimeRouteImport.update({
  path: '/anime',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const LoginIndexRoute = LoginIndexImport.update({
  path: '/login/',
  getParentRoute: () => rootRoute,
} as any)

const AnimeIndexRoute = AnimeIndexImport.update({
  path: '/',
  getParentRoute: () => AnimeRouteRoute,
} as any)

const AnimeSplatRoute = AnimeSplatImport.update({
  path: '/$',
  getParentRoute: () => AnimeRouteRoute,
} as any)

const AnimeCatalogIndexRoute = AnimeCatalogIndexImport.update({
  path: '/catalog/',
  getParentRoute: () => AnimeRouteRoute,
} as any)

const AnimeAnimeIdIndexRoute = AnimeAnimeIdIndexImport.update({
  path: '/$animeId/',
  getParentRoute: () => AnimeRouteRoute,
} as any)

const AnimeAnimeIdWatchIndexRoute = AnimeAnimeIdWatchIndexImport.update({
  path: '/$animeId/watch/',
  getParentRoute: () => AnimeRouteRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/anime': {
      id: '/anime'
      path: '/anime'
      fullPath: '/anime'
      preLoaderRoute: typeof AnimeRouteImport
      parentRoute: typeof rootRoute
    }
    '/anime/$': {
      id: '/anime/$'
      path: '/$'
      fullPath: '/anime/$'
      preLoaderRoute: typeof AnimeSplatImport
      parentRoute: typeof AnimeRouteImport
    }
    '/anime/': {
      id: '/anime/'
      path: '/'
      fullPath: '/anime/'
      preLoaderRoute: typeof AnimeIndexImport
      parentRoute: typeof AnimeRouteImport
    }
    '/login/': {
      id: '/login/'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginIndexImport
      parentRoute: typeof rootRoute
    }
    '/anime/$animeId/': {
      id: '/anime/$animeId/'
      path: '/$animeId'
      fullPath: '/anime/$animeId'
      preLoaderRoute: typeof AnimeAnimeIdIndexImport
      parentRoute: typeof AnimeRouteImport
    }
    '/anime/catalog/': {
      id: '/anime/catalog/'
      path: '/catalog'
      fullPath: '/anime/catalog'
      preLoaderRoute: typeof AnimeCatalogIndexImport
      parentRoute: typeof AnimeRouteImport
    }
    '/anime/$animeId/watch/': {
      id: '/anime/$animeId/watch/'
      path: '/$animeId/watch'
      fullPath: '/anime/$animeId/watch'
      preLoaderRoute: typeof AnimeAnimeIdWatchIndexImport
      parentRoute: typeof AnimeRouteImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexRoute,
  AnimeRouteRoute: AnimeRouteRoute.addChildren({
    AnimeSplatRoute,
    AnimeIndexRoute,
    AnimeAnimeIdIndexRoute,
    AnimeCatalogIndexRoute,
    AnimeAnimeIdWatchIndexRoute,
  }),
  LoginIndexRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/anime",
        "/login/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/anime": {
      "filePath": "anime/route.tsx",
      "children": [
        "/anime/$",
        "/anime/",
        "/anime/$animeId/",
        "/anime/catalog/",
        "/anime/$animeId/watch/"
      ]
    },
    "/anime/$": {
      "filePath": "anime/$.tsx",
      "parent": "/anime"
    },
    "/anime/": {
      "filePath": "anime/index.tsx",
      "parent": "/anime"
    },
    "/login/": {
      "filePath": "login/index.tsx"
    },
    "/anime/$animeId/": {
      "filePath": "anime/$animeId/index.tsx",
      "parent": "/anime"
    },
    "/anime/catalog/": {
      "filePath": "anime/catalog/index.tsx",
      "parent": "/anime"
    },
    "/anime/$animeId/watch/": {
      "filePath": "anime/$animeId/watch/index.tsx",
      "parent": "/anime"
    }
  }
}
ROUTE_MANIFEST_END */
